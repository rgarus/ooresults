[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "ooresults"
version = "0.4.3"
authors = [
  {name="Rainer Garus"},
]
description = "A software for the evaluation of the results of orienteering events"
readme = "README.rst"
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop",
    "Development Status :: 4 - Beta",
]
keywords = ["orienteering", "sportident"]
dependencies = [
    "case-converter",
    "clevercsv",
    "fastclasses-json",
    "fpdf2 == 2.6.1",
    "iso8601",
    "jsonschema",
    "lxml",
    "Mako == 1.3.10",
    "pyOpenSSL",
    "pyserial",
    "requests",
    "sireader",
    "tzlocal",
    "unidecode",
    "web.py @ https://github.com/webpy/webpy/archive/c888e19ccf43fd473991c92ffc878698edc68c1f.zip",
    "websocket-client",
    "websockets >= 14.2",
]


[project.optional-dependencies]
test = [
    "pytest >= 8.3.3",
    "pytest-asyncio >= 0.24.0",
    "selenium >= 4.26.1",
]

[project.scripts]
ooresults-server = "ooresults._server:main"
ooresults-reader = "ooresults._reader:main"

[project.urls]
Repository = "https://github.com/rgarus/ooresults"
Documentation = "https://ooresults.readthedocs.io/en/latest"

[tool.setuptools]
packages = [
    "ooresults",
    "ooresults.handler",
    "ooresults.model",
    "ooresults.otypes",
    "ooresults.pdf",
    "ooresults.pdf.fonts",
    "ooresults.plugins",
    "ooresults.plugins.imports",
    "ooresults.plugins.imports.entries",
    "ooresults.repo",
    "ooresults.repo.update",
    "ooresults.schema",
    "ooresults.static",
    "ooresults.templates",
    "ooresults.templates.si",
    "ooresults.utils",
    "ooresults.websocket_server",
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.black]
required-version = "25"

[tool.isort]
profile = "black"
force_single_line = "true"
lines_after_imports = 2

[tool.ruff.lint]
select = ["E", "F", "I", "PLC", "PLE", "PLW", "W"]
ignore = [
    "E501",  # Line too long
    "PLW0603",  # Using the global statement to update {name} is discouraged
    "PLW2901",  # Redefined loop name

]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2
